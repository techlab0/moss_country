'use client';

import React, { useState, useEffect } from 'react';
import Link from 'next/link';
import { usePathname, useRouter } from 'next/navigation';

const navigation = [
  { name: '„ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ', href: '/admin/dashboard', icon: 'üìä' },
  { name: 'Ê≥®ÊñáÁÆ°ÁêÜ', href: '/admin/orders', icon: 'üì¶' },
  { name: 'Âú®Â∫´ÁÆ°ÁêÜ', href: '/admin/inventory', icon: 'üìã' },
  { name: 'ÂïÜÂìÅÁÆ°ÁêÜ', href: '/admin/products', icon: 'üå±' },
  { name: '„Éñ„É≠„Ç∞„Éª„Éã„É•„Éº„ÇπÁÆ°ÁêÜ', href: '/admin/blog', icon: 'üìù' },
  { name: '„Ç´„É¨„É≥„ÉÄ„ÉºÁÆ°ÁêÜ', href: '/admin/calendar', icon: 'üìÖ' },
  { name: 'FAQÁÆ°ÁêÜ', href: '/admin/faqs', icon: '‚ùì' },
  { name: 'ËãîÂõ≥ÈëëÁÆ°ÁêÜ', href: '/admin/moss-guide', icon: 'üçÉ' },
  { name: '„ÅäÂïè„ÅÑÂêà„Çè„ÅõÁÆ°ÁêÜ', href: '/admin/contacts', icon: 'üìß' },
  { name: 'È°ßÂÆ¢ÁÆ°ÁêÜ', href: '/admin/customers', icon: 'üë•' },
  { name: '„É¶„Éº„Ç∂„ÉºÁÆ°ÁêÜ', href: '/admin/users', icon: 'üë§' },
  { name: 'È´òÂ∫¶„Å™„É¶„Éº„Ç∂„ÉºÁÆ°ÁêÜ', href: '/admin/users-advanced', icon: 'üë•' },
  { name: '„Çª„Ç≠„É•„É™„ÉÜ„Ç£„Ç¢„É©„Éº„Éà', href: '/admin/security-alerts', icon: 'üö®' },
  { name: 'È´òÂ∫¶„Å™„Çª„Ç≠„É•„É™„ÉÜ„Ç£', href: '/admin/security-advanced', icon: 'üõ°Ô∏è' },
  { name: 'Áõ£Êüª„É≠„Ç∞', href: '/admin/audit-logs', icon: 'üîç' },
  { name: '„Éá„Éº„Çø„Éô„Éº„ÇπÊúÄÈÅ©Âåñ', href: '/admin/database', icon: 'üóÑÔ∏è' },
  { name: 'Ë©≥Á¥∞CMS', href: '/admin/cms', icon: '‚öôÔ∏è' },
  { name: '2FAË®≠ÂÆö', href: '/admin/setup-2fa', icon: 'üîê' },
];

interface AdminLayoutProps {
  children: React.ReactNode;
}

function LogoutButton() {
  const router = useRouter();
  const [isLoading, setIsLoading] = useState(false);

  const handleLogout = async () => {
    setIsLoading(true);
    try {
      await fetch('/api/admin/logout', {
        method: 'POST',
      });
      router.push('/admin/login');
      router.refresh();
    } catch (error) {
      console.error('Logout failed:', error);
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <button
      onClick={handleLogout}
      disabled={isLoading}
      className="inline-flex items-center px-4 py-2 border border-transparent text-sm font-semibold rounded-md text-white bg-red-600 hover:bg-red-700 transition-colors disabled:opacity-50"
    >
      {isLoading ? '„É≠„Ç∞„Ç¢„Ç¶„Éà‰∏≠...' : '„É≠„Ç∞„Ç¢„Ç¶„Éà'}
    </button>
  );
}

export function AdminLayout({ children }: AdminLayoutProps) {
  const [sidebarOpen, setSidebarOpen] = useState(false);
  const pathname = usePathname();

  useEffect(() => {
    // ÁÆ°ÁêÜÁîªÈù¢Áî®„ÅÆCSS„ÇØ„É©„Çπ„ÇíËøΩÂä†
    document.body.classList.add('admin-layout');
    
    // „ÇØ„É™„Éº„É≥„Ç¢„ÉÉ„ÉóÈñ¢Êï∞
    return () => {
      document.body.classList.remove('admin-layout');
    };
  }, []);

  return (
    <div className="flex min-h-screen bg-gray-50">
      {/* „Çµ„Ç§„Éâ„Éê„Éº */}
      <div className={`fixed inset-y-0 left-0 z-50 w-64 bg-white shadow-lg transform transition-transform duration-300 ease-in-out lg:relative lg:z-auto lg:transform-none ${
        sidebarOpen ? 'translate-x-0' : '-translate-x-full'
      } lg:translate-x-0 overflow-y-auto`}>
        <div className="flex items-center justify-center h-16 bg-moss-green">
          <Link href="/" className="text-white text-xl font-bold">
            MOSS COUNTRY
          </Link>
        </div>
        
        <nav className="mt-8 px-4 pb-6">
          <ul className="space-y-2">
            {navigation.map((item) => {
              const isActive = pathname === item.href;
              return (
                <li key={item.name}>
                  <Link
                    href={item.href}
                    className={`flex items-center px-4 py-2 text-base font-semibold rounded-md transition-colors ${
                      isActive
                        ? 'bg-moss-green text-white'
                        : 'text-gray-700 hover:bg-gray-100 hover:text-gray-900'
                    }`}
                  >
                    <span className="mr-3 text-lg">{item.icon}</span>
                    {item.name}
                  </Link>
                </li>
              );
            })}
          </ul>
        </nav>
      </div>

      {/* „É¢„Éê„Ç§„É´Áî®„Ç™„Éº„Éê„Éº„É¨„Ç§ */}
      {sidebarOpen && (
        <div 
          className="fixed inset-0 z-40 bg-gray-600 bg-opacity-75 lg:hidden" 
          onClick={() => setSidebarOpen(false)}
        />
      )}

      {/* „É°„Ç§„É≥„Ç≥„É≥„ÉÜ„É≥„ÉÑ„Ç®„É™„Ç¢ */}
      <div className="flex flex-col flex-1 min-w-0 min-h-screen">
        {/* „Éò„ÉÉ„ÉÄ„Éº */}
        <header className="relative z-10 bg-white shadow-sm border-b">
          <div className="px-6 py-4">
            <div className="flex items-center justify-between">
              <div className="flex items-center">
                <button
                  type="button"
                  className="lg:hidden p-2 rounded-md text-gray-600 hover:bg-gray-100"
                  onClick={() => setSidebarOpen(!sidebarOpen)}
                >
                  <span className="sr-only">„É°„Éã„É•„Éº„ÇíÈñã„Åè</span>
                  <svg className="w-6 h-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M4 6h16M4 12h16M4 18h16" />
                  </svg>
                </button>
              </div>
              
              <div className="flex items-center space-x-4">
                <div className="text-base text-gray-700 font-medium">
                  ÁÆ°ÁêÜËÄÖ„É¢„Éº„Éâ
                </div>
                <Link
                  href="/admin/change-password"
                  className="inline-flex items-center px-3 py-2 border border-gray-300 text-sm font-semibold rounded-md text-gray-800 bg-white hover:bg-gray-50 transition-colors"
                >
                  üîë „Éë„Çπ„ÉØ„Éº„ÉâÂ§âÊõ¥
                </Link>
                <Link
                  href="/"
                  className="inline-flex items-center px-3 py-2 border border-gray-300 text-sm font-semibold rounded-md text-gray-800 bg-white hover:bg-gray-50 transition-colors"
                >
                  „Çµ„Ç§„Éà„ÇíË°®Á§∫
                </Link>
                <LogoutButton />
              </div>
            </div>
          </div>
        </header>

        {/* „É°„Ç§„É≥„Ç≥„É≥„ÉÜ„É≥„ÉÑ */}
        <main className="flex-1 px-6 py-8 bg-gray-50">
          {children}
        </main>
      </div>
    </div>
  );
}